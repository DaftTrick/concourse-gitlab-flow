groups:
  - name: develop
    jobs:
      - test-pull-request
      - test-develop
      - ship-develop
      - bump_beta

  - name: staging
    jobs:
      - promote-develop-to-rc
      - test-rc
      - ship-rc
      - bump_rc

  - name: production
    jobs:
      - promote-rc-to-master
      - ship-master-to-prod
      - merge-rc-to-dev
      - patch
      - minor
      - major

resource_types:
  - name: pull-request
    type: docker-image
    source:
      repository: jtarchie/pr

resources:
  - name: repo-develop
    type: git
    source:
      uri: {{github-repo-uri}}
      branch: develop
      private_key: {{github-private-key}}

  - name: repo-rc
    type: git
    source:
      uri: {{github-repo-uri}}
      branch: rc
      private_key: {{github-private-key}}

  - name: repo-master
    type: git
    source:
      uri: {{github-repo-uri}}
      branch: master
      private_key: {{github-private-key}}

  - name: pull-request
    type: pull-request
    source:
      access_token: {{github-access-token}}
      private_key: {{github-private-key}}
      repo: {{github-repo-name}}
      every: true

  - name: develop-version
    type: semver
    source:
      driver: git
      uri: {{github-repo-uri}}
      branch: {{develop-version-branch}}
      private_key: {{github-private-key}}
      file: version
      initial_version: {{develop-initial-version}}

  - name: version
    type: semver
    source:
      driver: git
      uri: {{github-repo-uri}}
      branch: {{version-branch}}
      private_key: {{github-private-key}}
      file: version
      initial_version: {{initial-version}}

jobs:
  # testing pull requests
  - name: test-pull-request
    plan:
    - get: repo
      resource: pull-request
      version: every
      trigger: true
    - put: pull-request
      params:
        path: repo
        status: pending
    - task: test-pull-request
      file: repo/ci/tasks/unit.yml
      on_success:
        put: pull-request
        params:
          path: repo
          status: success
      on_failure:
        put: pull-request
        params:
          path: repo
          status: failure

  - name: test-develop
    plan:
      - get: repo
        resource: repo-develop
        trigger: true
      - task: unit
        file: repo/ci/tasks/unit.yml

  - name: ship-develop
    plan:
      - aggregate:
        - get: repo
          resource: repo-develop
        - get: version
          resource: develop-version
      - task: unit
        file: repo/ci/tasks/unit.yml
      - task: ship-develop
        file: repo/ci/tasks/shipit.yml
      - put: repo
        resource: repo-develop
        params:
          repository: repo
          tag: version/version
      - put: version
        resource: develop-version
        params: { pre: beta }


  - name: promote-develop-to-rc
    plan:
      - aggregate:
        - get: repo-develop
        - get: repo-rc
        - get: develop-version
          param: { bump: final }
        - get: version
      - task: merge-develop-to-rc
        file: repo-rc/ci/tasks/merge-dev-to-rc.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo-rc
        params:
          repository: out
      - put: version
        params: { file: develop-version/version }
      - put: develop-version
        params: { bump: patch, pre: alpha }

  - name: test-rc
    plan:
      - get: repo
        resource: repo-rc
        trigger: true
      - task: unit
        file: repo/ci/tasks/unit.yml

  - name: ship-rc
    plan:
      - aggregate:
        - get: repo
          resource: repo-rc
        - get: version
      - task: unit
        file: repo/ci/tasks/unit.yml
      - task: ship-rc
        file: repo/ci/tasks/shipit.yml
      - put: repo
        resource: repo-rc
        params:
          repository: repo
          tag: version/version
      - put: version
        params: { pre: rc }

  - name: promote-rc-to-master
    plan:
      - aggregate:
        - get: repo-rc
        - get: repo-master
      - task: merge-rc-to-master
        file: repo-rc/ci/tasks/merge-rc-to-master.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo-master
        params:
          repository: out

  - name: ship-master-to-prod
    disable_manual_trigger: true
    plan:
      - aggregate:
        - get: repo
          resource: repo-master
          trigger: true
          passed: [ promote-rc-to-master ]
        - get: version
          params: { bump: final }
      - task: unit-on-master
        file: repo/ci/tasks/unit.yml
      - task: ship-master-prod
        file: repo/ci/tasks/shipit.yml
      - put: repo
        resource: repo-master
        params:
          repository: repo
          tag: version/version
      - put: version
        params: { bump: patch, pre: rc }
      - get: version
        parms: { pre: beta }
      - put: develop-version
        parms: { file: version/version }

  - name: merge-rc-to-dev
    disable_manual_trigger: true
    plan:
      - aggregate:
        - get: repo-master
          trigger: true
          passed: [ ship-master-to-prod ]
        - get: repo-rc
        - get: repo-develop
      - task: merge-rc-to-dev
        file: repo-dev/ci/tasks/merge-rc-to-dev.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
          CI_SKIP: true

# semver control
  - name: patch
    plan:
      - aggregate:
        - get: version
        - get: develop-version
      - put: version
        params: { bump: patch, pre: rc }
      - get: version
        parms: { pre: beta }
      - put: develop-version
        parms: { file: version/version }
  - name: minor
    plan:
      - aggregate:
        - get: version
        - get: develop-version
      - put: version
        params: { bump: minor, pre: rc }
      - get: version
        parms: { pre: beta }
      - put: develop-version
        parms: { file: version/version }
  - name: major
    plan:
      - aggregate:
        - get: version
        - get: develop-version
      - put: version
        params: { bump: major, pre: rc }
      - get: version
        parms: { pre: beta }
      - put: develop-version
        parms: { file: version/version }
  - name: bump_beta
    plan:
      - get: develop-version
      - put: develop-version
        parms: { pre: beta }
  - name: bump_rc
    plan:
      - get: version
      - put: version
        parms: { pre: rc }
